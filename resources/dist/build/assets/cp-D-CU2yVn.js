function a(e,t,o,p,c,d,h,f){var i=typeof e=="function"?e.options:e;return t&&(i.render=t,i.staticRenderFns=o,i._compiled=!0),{exports:e,options:i}}const s={mixins:[Fieldtype],data(){return{map:null,marker:null,infoWindow:null,placeAutocomplete:null}},mounted(){this.init()},methods:{async init(){if(await google.maps.importLibrary("marker"),await google.maps.importLibrary("places"),this.initMap(),this.initPlaceAutocomplete(),this.value){const e=new google.maps.places.Place({id:this.value});await e.fetchFields({fields:["displayName","formattedAddress","location","viewport"]}),this.updateMapInfo(e)}},initMap(){this.map=new google.maps.Map(this.$refs.map,{mapId:this.meta.map_id,center:this.meta.center,zoom:this.meta.zoom,mapTypeControl:!1,fullscreenControl:!1,streetViewControl:!1,cameraControl:!1,zoomControl:!0})},initPlaceAutocomplete(){this.placeAutocomplete=new google.maps.places.PlaceAutocompleteElement({includedRegionCodes:this.meta.countries,locationBias:this.meta.center}),this.$refs.autocomplete.appendChild(this.placeAutocomplete),this.placeAutocomplete.addEventListener("gmp-select",async({placePrediction:e})=>{const t=e.toPlace();await t.fetchFields({fields:["displayName","formattedAddress","location","viewport"]}),this.updateMapInfo(t),this.update(t.id)})},updateMapInfo(e){this.createMarker(e.location),this.createInfoWindow(e.displayName,e.formattedAddress,e.location),this.placeAutocomplete.locationBias=e.location,e.viewport?this.map.fitBounds(e.viewport):(this.map.setCenter(e.location),this.map.setZoom(17))},createMarker(e){this.marker&&(this.marker.map=null),this.marker=new google.maps.marker.AdvancedMarkerElement({map:this.map}),this.marker.position=e},createInfoWindow(e,t,o){this.infoWindow=new google.maps.InfoWindow,this.infoWindow.setHeaderContent(e),this.infoWindow.setContent(t),this.infoWindow.setPosition(o),this.infoWindow.open({map:this.map,anchor:this.marker,shouldFocus:!1}),this.infoWindow.addListener("closeclick",()=>this.destroyInfoWindow())},destroyInfoWindow(){this.marker&&(this.marker.map=null,this.update(null))}}};var n=function(){var t=this,o=t._self._c;return o("div",{staticClass:"wrapper"},[o("div",{ref:"map",staticClass:"map"}),o("div",{ref:"autocomplete",staticClass:"autocomplete"})])},l=[],r=a(s,n,l);const m=r.exports;Statamic.booting(()=>{Statamic.$components.register("places-fieldtype",m)});
